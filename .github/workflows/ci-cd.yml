name: Spring Client CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${REGISTRY}/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: extract_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}
          labels: |
            org.opencontainers.image.source=${GITHUB_REPOSITORY}
            org.opencontainers.image.revision=${GITHUB_SHA}
            org.opencontainers.image.version=${{ steps.extract_version.outputs.VERSION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Add Helm repository
        run: |
          helm repo add your-repo https://your-repo/charts
          helm repo update

      - name: Get Kubernetes credentials
        uses: azure/k8s-action@v1
        with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
          resource_group: ${{ secrets.RESOURCE_GROUP }}

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install spring-client \
            charts/spring-client \
            --namespace spring-client \
            --create-namespace \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ steps.extract_version.outputs.VERSION }} \
            --set global.secrets.spring_client_secret=${{ secrets.SPRING_CLIENT_SECRET }} \
            --set global.domain=${{ secrets.DOMAIN }}
